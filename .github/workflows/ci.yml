name: Continuous Integration

on:
  pull_request:
  push:
    branches: master

jobs:
  clang-format:
    name: Coding Style (C/C++)

    runs-on: ubuntu-20.04

    steps:
      - name: Install
        run: sudo apt-get update && sudo apt-get install -y clang-format-11

      - name: Checkout
        uses: actions/checkout@v2

      - name: Format
        run: |
          git ls-files \
            | egrep '(\.c|\.cpp|\.h)$' \
            | xargs clang-format-11 --dry-run --Werror

  platformio:
    name: PlatformIO

    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: Install
        run: sudo apt-get update && sudo apt-get install -y build-essential

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Cache PlatformIO
        uses: actions/cache@v2
        with:
          path: ~/.platformio
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}

      - name: Python installation
        uses: actions/setup-python@v2

      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio

      - name: Install PlatformIO dependencies
        run: |
          platformio platform install native
          platformio lib -g install

      - name: PlatformIO test
        run: platformio test -e native

      - name: Build dummy-linux example
        run: platformio ci examples/dummy-linux/main.c --lib=. --project-conf=examples/dummy-linux/platformio.ini

      - name: Build dummy-esp8266 example
        run: platformio ci examples/dummy-esp8266/main.cpp --lib=. --project-conf=examples/dummy-esp8266/platformio.ini